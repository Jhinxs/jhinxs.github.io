<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jhin&#39;s Story</title>
    <link>https://jhinxs.com/</link>
    <description>Recent content on Jhin&#39;s Story</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 Mar 2022 15:22:06 +0800</lastBuildDate><atom:link href="https://jhinxs.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Intel VT x64 EPT Hook框架的实现</title>
      <link>https://jhinxs.com/post/intel-vt-x64-ept-hook%E6%A1%86%E6%9E%B6%E7%9A%84%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Wed, 02 Mar 2022 15:22:06 +0800</pubDate>
      
      <guid>https://jhinxs.com/post/intel-vt-x64-ept-hook%E6%A1%86%E6%9E%B6%E7%9A%84%E5%AE%9E%E7%8E%B0/</guid>
      <description>主要记录下X64VT以及实现EPT Hook时的一些关键点 基本的VT开启 这部分和之前32位的没什么太大的区别，主要是在填写vmc字段时，需要额外填写如IA32_EFER，IA32E_MODE这种必须要填</description>
    </item>
    
    <item>
      <title>x64的一些特性</title>
      <link>https://jhinxs.com/post/x64%E7%9A%84%E4%B8%80%E4%BA%9B%E7%89%B9%E6%80%A7/</link>
      <pubDate>Sat, 21 Aug 2021 12:37:55 +0800</pubDate>
      
      <guid>https://jhinxs.com/post/x64%E7%9A%84%E4%B8%80%E4%BA%9B%E7%89%B9%E6%80%A7/</guid>
      <description>寄存器 首先是寄存器数值的宽度，除去标志寄存器和段寄存器(段寄存器长度均为96位，其中有16位的可见部分和80位的不可见部分)外，均为8个字节64位宽度，在32位平台的基础上，增加了R8~R15共8个寄</description>
    </item>
    
    <item>
      <title>Intel VT-x mini VT 框架的实现</title>
      <link>https://jhinxs.com/post/intel-vt-x-mini-vt-%E6%A1%86%E6%9E%B6%E7%9A%84%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Wed, 02 Jun 2021 12:37:55 +0800</pubDate>
      
      <guid>https://jhinxs.com/post/intel-vt-x-mini-vt-%E6%A1%86%E6%9E%B6%E7%9A%84%E5%AE%9E%E7%8E%B0/</guid>
      <description>Intel VT-x是Intel芯片用于支持硬件虚拟化的一种技术，个人理解是在传统的操作系统之上，创建专用于虚拟化开发者的特权级环境，这种权限甚至高于操作系统的环境，也就是常说的Hypervisor层，同样的，</description>
    </item>
    
  </channel>
</rss>
