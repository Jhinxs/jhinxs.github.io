<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Network Security - Tag - Jhin&#39;s Story</title>
        <link>https://jhinxs.com/tags/network-security/</link>
        <description>Network Security - Tag - Jhin&#39;s Story</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>jhinxs story</copyright><lastBuildDate>Sun, 05 Feb 2023 14:02:16 &#43;0800</lastBuildDate><atom:link href="https://jhinxs.com/tags/network-security/" rel="self" type="application/rss+xml" /><item>
    <title>安全架构-零信任初识</title>
    <link>https://jhinxs.com/%E5%AE%89%E5%85%A8%E6%9E%B6%E6%9E%84-%E9%9B%B6%E4%BF%A1%E4%BB%BB%E5%88%9D%E8%AF%86/</link>
    <pubDate>Sun, 05 Feb 2023 14:02:16 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://jhinxs.com/%E5%AE%89%E5%85%A8%E6%9E%B6%E6%9E%84-%E9%9B%B6%E4%BF%A1%E4%BB%BB%E5%88%9D%E8%AF%86/</guid>
    <description><![CDATA[背景 个人理解，传统的企业网络安全架构中，主要存在内外网界限划分的概念，而且大部分时间，防护重点主要放在对抗来自外网的威胁，凡是来自外部的请求默认会被判定为恶意。但是在内网，虽然会使用一定的安全设备和策略进行一定的防护，但是大部分情况下，对来自内部的请求默认是可信的，不会像外网那样设置多重的如身份认证，鉴权等细化的防护策略。所以以往，入侵者进去内网之后，利用获取到的部分凭证，大部分情况下，可随意进行内网渗透，获取更多的数据和权限。而零信任的诞生，则是为了彻底杜绝这种情况，逻辑上舍弃传统的内外网划分（并不一定是在网络架构上放弃内外网的网络架构，完全推倒重来），以多种维度为认证属性的身份作为认证的标准，将身份和权限作为新的边界。
零信任的技术标准 这里主要简单介绍一下国际云安全联盟CSA发布的SDP(软件定义边界)以及美国国家标准技术研究所(NIST)发布的的零信任标准。
SDP CSA在2014年发布了SDP技术标准，软件定义边界是指通过在每个用户的设备上安装客户端软件，也即Agent,用作身份校验。通过验证则可以访问对应的资源，这样在逻辑上形成一种网络边界，相对于传统的网络架构，不再通过传统内外网的形式划分网络边界。

SDP的主要组件有三个：
 SDP客户端：负责在用户登录时，传输所需认证的身份信息以及业务请求信息。 SDP管控端：验证用户的身份，向网关下发访问控制策略 SDP安全网关：负责访问控制，接受SDP管控端发来的策略并执行。  工作流程：
 SDP客户端登录，登录请求被SDP管控端接受，通过其中的身份验证信息进行验证。 身份验证通过后，管控端向客户端发送用户可访问的SDP网关信息。 客户端与SDP网关建立安全加密的数据通道，用于传输后续的访问业务的流量，用户发起的业务请求会经过客户端转发给SDP安全网关。 SDP网关会根据请求中的用户信息以及访问控制策略，进行权限校验并将请求转发到后端对应的业务系统中去。  SPA单包授权 传统的网络架构中，设备或者业务系统支持在验证通过前即可访问，访问者身份无法验明，所以容易产生访问控制机制被绕过的情况。而SPA技术，SDP网关默认不对外开放端口，所有未经过认证的请求将全部被丢弃，从而实现&quot;隐身&quot;效果。 SPA过程：
 SDP客户端和SDP网关建立通信之前，首先发送一个认证数据包，这个认证数据包中带有身份信息和需要访问的目的地信息。 SPD网关接受到认证数据包后，将解析并验证身份，根据策略检查目的地能否被当前用户访问。 如果通过检查，那么网关则会给用户放行对应的网络通路，如添加一条防火墙放行策略。 通过SPA认证后，后续的业务流量，SDP网关将转发给对应的业务系统。  SDP适用场景 通过Agent可以实现对用户设备的安全控制，防护效果更为严密，但也就意味着，公开的一些网站无法使用SDP,更加适合用于在集团公司的访问控制，例如：分支机构接入等场景
NIST零信任架构 美国国家标准技术研究所发布《零信任架构ZTA》标准，是目前比较权威的零信任架构标准。 零信任架构的设计和部署遵循以下基本原则：
 所有数据源和计算服务均被视为资源。 无论网络位置如何，所有通信都必须是安全的。 对企业资源的访问授权是基于每个连接的。 对资源的访问权限由动态策略（包括客户身份、应用和请求资产的可观测状态）决定，也可能包括其他行为属性。 企业应该监控并且测量其所有自有或关联的资产的完整性和安全态势。 所有资源的身份认证和授权是动态的，并且在资源访问被允许之前严格强制实施。 企业应该尽可能收集关于资产、网络基础设施和通信的当前状态信息,并将其应用于改善网络安全态势。  ZTA框架模型 
以上组件的具体描述：
 策略引擎（Policy Engine）:负责访问控制，决定主体是否有权访问资源，策略引擎可以使用多种维度的情报作为输入，用于策略的指定，以决定授予或拒绝对该资源的访问。 策略管理（Policy Administrator）: 负责管理用于用户身份认证的令牌凭据以及建立会话，依赖于策略引擎的输出，并通知PEP创建或者关闭会话。 策略执行点（Policy Enforcement Point）: 负责启用、监视并最终终止访问主体和企业资源之间的连接。PEP与PA通信，接受PA的策略指示，建立和关闭会话。  零信任的组件 零信任安全网关 无论是SDP,ZTA,零信任网关是零信任架构的核心之一，负责实施访问控制，用户流量的转发等主要功能。
Web 代理网关 web代理网关顾名思义，只对Web请求做代理转发，只支持Web网站的接入，对于客户端类应用则无法起作用。
主要功能：
 获取身份 客户端在发起请求的时候，会在请求数据包头部加入代表用户身份的Token，代理网关可以解析数据包头，获取到验证身份所需的身份信息进行校验。 验证身份：将身份信息转发给PA等管控平台，管控平台验证后将结果发送回网关。 代理转发： 这里的基本的流量代理转发功能，和平常的代理转发类似，将后端的业务域名DNS解析到Web代理网关的IP地址，用户访问业务系统域名的时候，会跳转到Web网关之上，网关会解析用户想要访问的业务系统的地址，当通过身份认证后，则会将流量转发到对应的服务器上。  Tunnel 隧道网关 前面说到，Web代理网关无法支持客户端类的C/S应用，意味着无法覆盖所有的应用访问场景，例如SSH,RDP,企业软件升级等等。 隧道网关的实现，可以使用VPN技术来实现，通过设置虚拟网卡，拦截网络流量，流量转发给网关之后，进行身份与权限校验，将合法的流量转发到对应的服务器上。 隧道网关相比于Web代理网关，可以覆盖更多的场景，但是性能可能不如Web代理网关，在对流量的管控粒度上，可能也不如Web网关细致，实际中，可以将两种网关进行互补部署，取长补短。]]></description>
</item></channel>
</rss>
